Русский:

    Описание проекта

        Этот PHP-проект представляет собой простой калькулятор, который вычисляет математические выражения,
        переданные в качестве аргументов командной строки. Он поддерживает основные арифметические операции, 
        включая сложение, вычитание, умножение, деление и скобки для группировки.

    Функциональность

        Обработка ввода

            Скрипт принимает математическое выражение в качестве первого аргумента командной строки ($argv[1]).
            
            Очищает ввод, удаляя любые недопустимые символы с помощью preg_replace, разрешая только цифры, операторы и скобки.
        
        Разбор выражения

            Функция my_eval_expr($equation)

                Очищает входное выражение.
                
                Вызывает parse_expression($equation) для вычисления очищенного выражения.
        
            Функция parse_expression($equation)

                Обработка скобок

                    Использует регулярные выражения для рекурсивного вычисления выражений внутри скобок.
                
                    Заменяет самые внутренние скобки на их вычисленное значение, пока скобки не останутся.
                
                Умножение и деление

                    Использует регулярные выражения для поиска операций умножения и деления.
                    
                    Вычисляет эти операции перед сложением и вычитанием, соблюдая приоритет операторов.
                
                    Поддерживает числа с плавающей точкой.
                
                Сложение и вычитание

                    Использует регулярные выражения для поиска операций сложения и вычитания.
                    
                    Вычисляет эти операции после умножения и деления.
        
        Тестирование

            Предоставлен отдельный тестовый скрипт (test.php).

            Класс TestCase

                Предоставляет методы для проверки равенства (assertEquals) и отслеживания результатов тестов.
                
                Обрабатывает отображение результатов тестов с цветовым выделением для пройденных и неудачных тестов.
            
            Класс UnitTest

                Наследуется от TestCase.
            
                Содержит метод testEvalExpr(), который запускает несколько тестовых случаев для проверки корректности работы калькулятора.
    
    Пример использования

        php calculator.php "2+(3*4)-5"
        Эта команда выведет результат выражения 2+(3*4)-5, который равен 9.




    Замечания по коду

    Безопасность

    Очистка ввода с помощью preg_replace помогает предотвратить внедрение кода и гарантирует, что обрабатываются только допустимые символы.
    Поддержка операторов

    Поддерживает основные арифметические операторы: +, -, *, /.
    Скобки () правильно обрабатываются для обеспечения нужного порядка операций.
    Оператор модуля (%) присутствует в тестовых случаях, но не реализован в функции parse_expression, что может привести к несоответствиям.
    Ограничения

    Обработка ошибок

    Скрипт не обрабатывает ошибки деления на ноль.
    Не проверяет несоответствие скобок, что может вызвать бесконечные циклы или ошибки.
    Некорректные выражения могут привести к неожиданным результатам или предупреждениям.
    Приоритет операторов

    Текущая реализация может некорректно обрабатывать некоторые крайние случаи из-за использования регулярных выражений для разбора.
    Использование регулярных выражений для разбора математических выражений может быть ненадежным для сложных случаев.
    Улучшения

    Реализация оператора модуля

    Для соответствия тестовым случаям реализуйте поддержку оператора модуля % в функции parse_expression.
    Надежный разбор

    Рассмотрите возможность использования полноценного парсера выражений или преобразования выражения в обратную польскую нотацию (ОПН) для точного и надежного вычисления.
    Проверка ошибок

    Добавьте обработку ошибок для деления на ноль и несоответствия скобок.
    Более тщательно проверяйте входное выражение перед вычислением.
    Тестовая структура

    Метод assertEquals использует eval() для сравнения, что может быть рискованно.
    Избегайте использования eval(), сравнивая ожидаемые и фактические значения напрямую, когда это возможно.
